{"version":3,"names":[],"mappings":"","sources":["modules/getRouteDetail.js"],"sourcesContent":["import GetAuthorizationHeader from \"./getAurthor.js\";\r\nimport choiceCity from \"./choiceCity.js\";\r\nimport showRoute from \"./showRoute.js\";\r\nimport showStopPosition from \"./showStopPosition.js\";\r\n\r\nlet goTime = [],\r\n    backTime = [],\r\n    goStops = [],\r\n    backStops = [];\r\n\r\nexport default function getRouteDetail(e, map, markerLayers) {\r\n\r\n  const routename = e.target.dataset.routeName,\r\n        routeId = e.target.dataset.routeId,\r\n        departure = e.target.dataset.depa || '',\r\n        destination = e.target.dataset.dest || '';\r\n\r\n  const city = choiceCity();\r\n\r\n  const name = document.querySelector('#routeName'),\r\n        goBtn = document.querySelector('#pills-goto-tab'),\r\n        backBtn = document.querySelector('#pills-backto-tab'),\r\n        refreshBtn = document.querySelector('#refreshBtn');\r\n\r\n  name.innerHTML = routename;\r\n  goBtn.innerHTML = `往 <strong>${destination}</strong>`;\r\n  backBtn.innerHTML = `往 <strong>${departure}</strong>`;\r\n\r\n  // 立即更新\r\n  refreshBtn.setAttribute('data-route-name', routename);\r\n  refreshBtn.setAttribute('data-route-id', routeId);\r\n  refreshBtn.setAttribute('data-depa', departure);\r\n  refreshBtn.setAttribute('data-dest', destination);\r\n\r\n\r\n  // get bus stop info\r\n  getBusStop(routename, routeId, city, map, markerLayers);\r\n\r\n}\r\n\r\n// 各站列表\r\nfunction getBusStop(routename, routeId, city, map, markerLayers) {\r\n  axios({\r\n    method: 'get',\r\n    baseURL: 'https://ptx.transportdata.tw/MOTC/',\r\n    url: `v2/Bus/StopOfRoute/City/${city}/${routename}?$format=JSON`,\r\n    headers: GetAuthorizationHeader()\r\n  })\r\n    .then(res => {\r\n\r\n      // 過濾含有同樣數字的路線名稱\r\n      const stopData = res.data.filter(data => data.RouteUID === routeId)\r\n\r\n      // 去程\r\n      stopData[0].Stops.forEach(obj => {\r\n        goStops.push({\r\n          stopId: obj.StopUID,\r\n          stopName: obj.StopName.Zh_tw,\r\n          stopPosition: [obj.StopPosition.PositionLat, obj.StopPosition.PositionLon]\r\n        })\r\n      })\r\n\r\n      // 返程\r\n      if (stopData[1] !== undefined) {\r\n        stopData[1].Stops.forEach(obj => {\r\n          backStops.push({\r\n            stopId: obj.StopUID,\r\n            stopName: obj.StopName.Zh_tw,\r\n            stopPosition: [obj.StopPosition.PositionLat, obj.StopPosition.PositionLon]\r\n          })\r\n        })\r\n      }\r\n\r\n    })\r\n    .then(res => {\r\n\r\n      // 顯示沿線各站\r\n      showRoute(goStops, true);\r\n      showRoute(backStops, false);\r\n\r\n      // get estimate time\r\n      getEstimatetime(routename, routeId, city, map, markerLayers);\r\n\r\n    })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// 取得預估到站時間\r\nfunction getEstimatetime(routename, routeId, city, map, markerLayers) {\r\n\r\n  axios({\r\n    method: 'get',\r\n    baseURL: 'https://ptx.transportdata.tw/MOTC/',\r\n    url: `v2/Bus/EstimatedTimeOfArrival/City/${city}/${routename}`,\r\n    headers: GetAuthorizationHeader()\r\n  })\r\n    .then(res => {\r\n      let timeData = res.data.filter(data => data.RouteUID === routeId);\r\n\r\n      // bus of Taipie doesn't have 'PlateNumb' property\r\n      if (timeData[0].hasOwnProperty('PlateNumb')) {\r\n        timeData = timeData.filter(data => data.PlateNumb)\r\n      } else {\r\n        console.log('no PlateNumb')\r\n      }\r\n\r\n      timeData.forEach(data => {\r\n        if (data.Direction === 0) {\r\n          goTime.push({\r\n            stopId: data.StopUID,\r\n            estimateTime: data.EstimateTime\r\n          });\r\n        } else {\r\n          backTime.push({\r\n            stopId: data.StopUID,\r\n            estimateTime: data.EstimateTime\r\n          });\r\n        }\r\n      });\r\n\r\n    })\r\n    .then(res => {\r\n\r\n      // show go time\r\n      const goItemBadges = document.querySelectorAll('.item-badge-go'),\r\n            goItemDots = document.querySelectorAll('.item-dot-go'),\r\n            goNames = document.querySelectorAll('.item-name-go');\r\n\r\n      goTime.forEach(go => {\r\n        goItemBadges.forEach(badge => {\r\n\r\n          let stopid = badge.getAttribute('data-stopId');\r\n\r\n          if (stopid === go.stopId) {\r\n            if ((go.estimateTime / 60) <= 1) {\r\n              badge.className = `item-badge-go-${stopid} item-badge-go item-badge d-block text-nowrap rounded-10 text-white lh-sm fs-14 text-center py-1 me-3 bg-info`\r\n              badge.innerHTML = '進站中';\r\n            } else if ((go.estimateTime / 60) > 1 && (go.estimateTime / 60) <= 2) {\r\n              badge.className = `item-badge-go-${stopid} item-badge-go item-badge d-block text-nowrap rounded-10 text-white lh-sm fs-14 text-center py-1 me-3 bg-info`;\r\n              badge.innerHTML = '即將進站';\r\n            } else if (isNaN(go.estimateTime)) {\r\n              badge.className = `item-badge-go-${stopid} item-badge-go item-badge d-block text-nowrap rounded-10 text-white lh-sm fs-14 text-center py-1 me-3 bg-a9`;\r\n            } else {\r\n              badge.className = `item-badge-go-${stopid} item-badge-go item-badge d-block text-nowrap rounded-10 text-white lh-sm fs-14 text-center py-1 me-3 bg-success`;\r\n              badge.innerHTML = `${Math.floor(go.estimateTime / 60)} 分鐘`;\r\n            }\r\n          }\r\n\r\n        })\r\n\r\n        goItemDots.forEach(dot => {\r\n          let stopid = dot.getAttribute('data-stopId');\r\n\r\n          if (stopid === go.stopId) {\r\n            if ((go.estimateTime / 60) <= 1) {\r\n              dot.className = 'item-dot-go item-dot-info';\r\n            } else if ((go.estimateTime / 60) > 1 && (go.estimateTime / 60) <= 2) {\r\n              dot.className = 'item-dot-go item-dot-info';\r\n            }\r\n          }\r\n        })\r\n\r\n        goNames.forEach(name => {\r\n          let stopid = name.getAttribute('data-stopId');\r\n\r\n          if (stopid === go.stopId) {\r\n            if ((go.estimateTime / 60) <= 1) {\r\n              name.className = 'item-name-go fs-14 fw-bold my-auto';\r\n            } else {\r\n              name.className = 'item-name-go fs-14 my-auto';\r\n            }\r\n          }\r\n\r\n        })\r\n      })\r\n\r\n      // show back time\r\n      const backItemBadges = document.querySelectorAll('.item-badge-back'),\r\n            backItemDots = document.querySelectorAll('.item-dot-back'),\r\n            backNames = document.querySelectorAll('.item-name-back');\r\n\r\n      backTime.forEach(back => {\r\n        backItemBadges.forEach(badge => {\r\n          let stopid = badge.getAttribute('data-stopId');\r\n\r\n          if (stopid === back.stopId) {\r\n            if ((back.estimateTime / 60) <= 1) {\r\n              badge.className = `item-badge-back-${stopid} item-badge-back item-badge d-block text-nowrap rounded-10 text-white lh-sm fs-14 text-center py-1 me-3 bg-info`\r\n              badge.innerHTML = '進站中';\r\n            } else if ((back.estimateTime / 60) > 1 && (back.estimateTime / 60) <= 2) {\r\n              badge.className = `item-badge-back-${stopid} item-badge-back item-badge d-block text-nowrap rounded-10 text-white lh-sm fs-14 text-center py-1 me-3 bg-info`;\r\n              badge.innerHTML = '即將進站';\r\n            } else if (isNaN(back.estimateTime)) {\r\n              badge.className = `item-badge-back-${stopid} item-badge-back item-badge d-block text-nowrap rounded-10 text-white lh-sm fs-14 text-center py-1 me-3 bg-a9`;\r\n            } else {\r\n              badge.className = `item-badge-back-${stopid} item-badge-back item-badge d-block text-nowrap rounded-10 text-white lh-sm fs-14 text-center py-1 me-3 bg-success`;\r\n              badge.innerHTML = `${Math.floor(back.estimateTime / 60)} 分鐘`;\r\n            }\r\n          }\r\n        })\r\n\r\n        backItemDots.forEach(dot => {\r\n          let stopid = dot.getAttribute('data-stopId');\r\n\r\n          if (stopid === back.stopId) {\r\n            if ((back.estimateTime / 60) <= 1) {\r\n              dot.className = 'item-dot-back item-dot-info';\r\n            } else if ((back.estimateTime / 60) > 1 && (back.estimateTime / 60) <= 2) {\r\n              dot.className = 'item-dot-back item-dot-info';\r\n            }\r\n          }\r\n        })\r\n\r\n        backNames.forEach(name => {\r\n          let stopid = name.getAttribute('data-stopId');\r\n\r\n          if (stopid === back.stopId) {\r\n            if ((back.estimateTime / 60) <= 1) {\r\n              name.className = 'item-name-back fs-14 fw-bold my-auto';\r\n            } else {\r\n              name.className = 'item-name-back fs-14 my-auto';\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n    })\r\n    .then(rew => {\r\n      goStops = [];\r\n      goTime = [];\r\n      backStops = [];\r\n      backTime = [];\r\n\r\n      const stops = document.querySelectorAll('.stops-item');\r\n      stops.forEach(stop => {\r\n        stop.addEventListener('click', e => {\r\n          e.preventDefault();\r\n          // markerLayers.clearLayers();\r\n          showStopPosition(e, map, markerLayers);\r\n        })\r\n      })\r\n    })\r\n    .catch(err => console.log(err));\r\n}\r\n"],"file":"getRouteDetail.js"}