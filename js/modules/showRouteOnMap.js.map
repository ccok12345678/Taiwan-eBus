{"version":3,"names":[],"mappings":"","sources":["modules/showRouteOnMap.js"],"sourcesContent":["import choiceCity from \"./choiceCity.js\";\r\nimport GetAuthorizationHeader from \"./getAurthor.js\";\r\n\r\nexport default function showRouteOnMap(e, map, layerGroup) {\r\n  const routeName = e.target.dataset.routeName,\r\n        routeId = e.target.dataset.routeId,\r\n        city = choiceCity();\r\n\r\n  const url = `https://ptx.transportdata.tw/MOTC/v2/Bus/Shape/City/${city}/${routeName}`;\r\n\r\n  fetch(url, {\r\n    method: 'get',\r\n    headers: GetAuthorizationHeader()\r\n  })\r\n    .then(res => {\r\n      if (res.status !== 200)\r\n        throw new Error(res.status)\r\n\r\n      return res.json()\r\n    })\r\n    .then(res => {\r\n      \r\n      const data = res.filter(route =>  route.RouteUID === routeId);\r\n\r\n      const lineString = data[0].Geometry;\r\n      // console.log(lineString);\r\n      let lineArr = JSON.parse(lineString.replace('LINESTRING(', '[[')\r\n                      .replace(')', ']]')\r\n                      .replace(/,/g, '],[')\r\n                      .replace(/ /g, ',')\r\n                      )\r\n      lineArr = lineArr.map(line => [line[1], line[0]]);\r\n      \r\n      // console.log(lineArr);\r\n\r\n      return lineArr;\r\n    })\r\n    .then(arr => {\r\n\r\n      layerGroup.clearLayers();\r\n\r\n      const busStopMarker = L.icon({\r\n        iconUrl: '../images/marker_busStop.svg',\r\n        iconSize: [26, 26],\r\n        iconAnchor: [13, 10],\r\n      });\r\n\r\n      const depatureMarker = L.marker(arr[0], {\r\n                                icon: busStopMarker,\r\n                                minWidth: 0,\r\n                                closeButton: false,\r\n                                autoClose: true\r\n                              });\r\n      const destinationMarker = L.marker(arr[(arr.length - 1)], {\r\n                                icon: busStopMarker,\r\n                                minWidth: 0,\r\n                                closeButton: false,\r\n                                autoClose: true\r\n                              });\r\n\r\n      const busLine = L.polyline(arr, { color: '#345E8A' });\r\n      layerGroup\r\n        .addLayer(busLine)\r\n        .addLayer(depatureMarker)\r\n        .addLayer(destinationMarker)\r\n        .addTo(map);\r\n\r\n      map.fitBounds(busLine.getBounds());\r\n\r\n    })\r\n    .catch(err => console.log('error', err))\r\n}"],"file":"showRouteOnMap.js"}